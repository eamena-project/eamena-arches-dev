!function(r){var e={};function n(t){if(e[t])return e[t].exports;var o=e[t]={i:t,l:!1,exports:{}};return r[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=r,n.c=e,n.d=function(r,e,t){n.o(r,e)||Object.defineProperty(r,e,{configurable:!1,enumerable:!0,get:t})},n.r=function(r){Object.defineProperty(r,"__esModule",{value:!0})},n.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(e,"a",e),e},n.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},n.p="",n(n.s=6)}([function(r,e){r.exports=toGeoJSON},function(r,e){r.exports=topojson},function(r,e,n){"use strict";var t={};function o(r,e){r=Math.round(r*e),(r<<=1)<0&&(r=~r);for(var n="";r>=32;)n+=String.fromCharCode(63+(32|31&r)),r>>=5;return n+=String.fromCharCode(r+63)}function i(r){for(var e=[],n=0;n<r.length;n++)e.push(r[n].slice().reverse());return e}t.decode=function(r,e){for(var n,t=0,o=0,i=0,u=[],s=0,a=0,l=null,f=Math.pow(10,e||5);t<r.length;){l=null,s=0,a=0;do{a|=(31&(l=r.charCodeAt(t++)-63))<<s,s+=5}while(l>=32);n=1&a?~(a>>1):a>>1,s=a=0;do{a|=(31&(l=r.charCodeAt(t++)-63))<<s,s+=5}while(l>=32);o+=n,i+=1&a?~(a>>1):a>>1,u.push([o/f,i/f])}return u},t.encode=function(r,e){if(!r.length)return"";for(var n=Math.pow(10,e||5),t=o(r[0][0],n)+o(r[0][1],n),i=1;i<r.length;i++){var u=r[i],s=r[i-1];t+=o(u[0]-s[0],n),t+=o(u[1]-s[1],n)}return t},t.fromGeoJSON=function(r,e){if(r&&"Feature"===r.type&&(r=r.geometry),!r||"LineString"!==r.type)throw new Error("Input must be a GeoJSON LineString");return t.encode(i(r.coordinates),e)},t.toGeoJSON=function(r,e){return{type:"LineString",coordinates:i(t.decode(r,e))}},"object"==typeof r&&r.exports&&(r.exports=t)},function(r,e){r.exports=o,r.exports.parse=o,r.exports.stringify=function r(e){"Feature"===e.type&&(e=e.geometry);function n(r){return r.join(" ")}function t(r){return r.map(n).join(", ")}function o(r){return r.map(t).map(i).join(", ")}function i(r){return"("+r+")"}switch(e.type){case"Point":return"POINT ("+n(e.coordinates)+")";case"LineString":return"LINESTRING ("+t(e.coordinates)+")";case"Polygon":return"POLYGON ("+o(e.coordinates)+")";case"MultiPoint":return"MULTIPOINT ("+t(e.coordinates)+")";case"MultiPolygon":return"MULTIPOLYGON ("+e.coordinates.map(o).map(i).join(", ")+")";case"MultiLineString":return"MULTILINESTRING ("+o(e.coordinates)+")";case"GeometryCollection":return"GEOMETRYCOLLECTION ("+e.geometries.map(r).join(", ")+")";default:throw new Error("stringify requires a valid GeoJSON Feature or geometry object as input")}};var n=/[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/,t=new RegExp("^"+n.source+"(\\s"+n.source+"){1,}");function o(r){var e,n=r.split(";"),o=n.pop(),i=(n.shift()||"").split("=").pop(),u=0;function s(r){var e=o.substring(u).match(r);return e?(u+=e[0].length,e[0]):null}function a(){s(/^\s*/)}function l(){a();for(var r,e=0,n=[],o=[n],i=n;r=s(/^(\()/)||s(/^(\))/)||s(/^(\,)/)||s(t);){if("("===r)o.push(i),i=[],o[o.length-1].push(i),e++;else if(")"===r){if(0===i.length)return null;if(!(i=o.pop()))return null;if(0===--e)break}else if(","===r)i=[],o[o.length-1].push(i);else{if(r.split(/\s/g).some(isNaN))return null;Array.prototype.push.apply(i,r.split(/\s/g).map(parseFloat))}a()}return 0!==e?null:n}function f(){for(var r,e,n=[];e=s(t)||s(/^(\,)/);)","===e?(n.push(r),r=[]):e.split(/\s/g).some(isNaN)||(r||(r=[]),Array.prototype.push.apply(r,e.split(/\s/g).map(parseFloat))),a();return r?(n.push(r),n.length?n:null):null}function c(){return function(){if(!s(/^(point)/i))return null;if(a(),!s(/^(\()/))return null;var r=f();return r?(a(),s(/^(\))/)?{type:"Point",coordinates:r[0]}:null):null}()||function(){if(!s(/^(linestring)/i))return null;if(a(),!s(/^(\()/))return null;var r=f();return r&&s(/^(\))/)?{type:"LineString",coordinates:r}:null}()||function(){if(!s(/^(polygon)/i))return null;a();var r=l();return r?{type:"Polygon",coordinates:r}:null}()||function(){if(!s(/^(multipoint)/i))return null;a();var r=o.substring(o.indexOf("(")+1,o.length-1).replace(/\(/g,"").replace(/\)/g,"");o="MULTIPOINT ("+r+")";var e=l();return e?(a(),{type:"MultiPoint",coordinates:e}):null}()||function(){if(!s(/^(multilinestring)/i))return null;a();var r=l();return r?(a(),{type:"MultiLineString",coordinates:r}):null}()||function(){if(!s(/^(multipolygon)/i))return null;a();var r=l();return r?{type:"MultiPolygon",coordinates:r}:null}()||function(){var r,e=[];if(!s(/^(geometrycollection)/i))return null;if(a(),!s(/^(\()/))return null;for(;r=c();)e.push(r),a(),s(/^(\,)/),a();return s(/^(\))/)?{type:"GeometryCollection",geometries:e}:null}()}return(e=c())&&i.match(/\d+/)&&(e.crs={type:"name",properties:{name:"urn:ogc:def:crs:EPSG::"+i}}),e}},function(r,e){r.exports=csv2geojson},function(r,e,n){r.exports=function(r,e,n){var t=!1;if(void 0===window.XMLHttpRequest)return e(Error("Browser not supported"));if(void 0===n){var o=r.match(/^\s*https?:\/\/[^\/]*/);n=o&&o[0]!==location.protocol+"//"+location.hostname+(location.port?":"+location.port:"")}var i=new window.XMLHttpRequest;if(n&&!("withCredentials"in i)){i=new window.XDomainRequest;var u=e;e=function(){if(t)u.apply(this,arguments);else{var r=this,e=arguments;setTimeout(function(){u.apply(r,e)},0)}}}function s(){var r;void 0===i.status||(r=i.status)>=200&&r<300||304===r?e.call(i,null,i):e.call(i,i,null)}return"onload"in i?i.onload=s:i.onreadystatechange=function(){4===i.readyState&&s()},i.onerror=function(r){e.call(this,r||!0,null),e=function(){}},i.onprogress=function(){},i.ontimeout=function(r){e.call(this,r,null),e=function(){}},i.onabort=function(r){e.call(this,r,null),e=function(){}},i.open("GET",r,!0),i.send(null),t=!0,i}},function(r,e,n){var t=n(5),o=n(4),i=n(3),u=n(2),s=n(1),a=n(0);function l(r,e){"setGeoJSON"in r?r.setGeoJSON(e):"addData"in r&&r.addData(e)}function f(r,e,n){var t="string"==typeof r?JSON.parse(r):r;for(var o in n=n||L.geoJson(),t.objects){var i=s.feature(t,t.objects[o]);i.features?l(n,i.features):l(n,i)}return n}function c(r,e,n){return n=n||L.geoJson(),e=e||{},o.csv2geojson(r,e,function(r,e){if(r)return n.fire("error",{error:r});l(n,e)}),n}function p(r,e,n){var t=y(r);return t?(l(n=n||L.geoJson(),a.gpx(t)),n):n.fire("error",{error:"Could not parse GPX"})}function g(r,e,n){var t=y(r);return t?(l(n=n||L.geoJson(),a.kml(t)),n):n.fire("error",{error:"Could not parse KML"})}function d(r,e,n){n=n||L.geoJson(),e=e||{};for(var t=u.decode(r,e.precision),o={type:"LineString",coordinates:[]},i=0;i<t.length;i++)o.coordinates[i]=[t[i][1],t[i][0]];return l(n,o),n}function v(r,e,n){return l(n=n||L.geoJson(),i(r)),n}function y(r){return"string"==typeof r?(new DOMParser).parseFromString(r,"text/xml"):r}r.exports.polyline=function(r,e,n){var o=n||L.geoJson();return t(r,function(r,n){if(r)return o.fire("error",{error:r});d(n.responseText,e,o),o.fire("ready")}),o},r.exports.polyline.parse=d,r.exports.geojson=function(r,e,n){var o=n||L.geoJson();return t(r,function(r,e){if(r)return o.fire("error",{error:r});l(o,JSON.parse(e.responseText)),o.fire("ready")}),o},r.exports.topojson=function(r,e,n){var o=n||L.geoJson();return t(r,function(r,n){if(r)return o.fire("error",{error:r});f(n.responseText,e,o),o.fire("ready")}),o},r.exports.topojson.parse=f,r.exports.csv=function(r,e,n){var o=n||L.geoJson();return t(r,function(r,n){var t;if(r)return o.fire("error",{error:r});function i(){t=!0}o.on("error",i),c(n.responseText,e,o),o.off("error",i),t||o.fire("ready")}),o},r.exports.csv.parse=c,r.exports.gpx=function(r,e,n){var o=n||L.geoJson();return t(r,function(r,n){var t;if(r)return o.fire("error",{error:r});function i(){t=!0}o.on("error",i),p(n.responseXML||n.responseText,e,o),o.off("error",i),t||o.fire("ready")}),o},r.exports.gpx.parse=p,r.exports.kml=function(r,e,n){var o=n||L.geoJson();return t(r,function(r,n){var t;if(r)return o.fire("error",{error:r});function i(){t=!0}o.on("error",i),g(n.responseXML||n.responseText,e,o),o.off("error",i),t||o.fire("ready")}),o},r.exports.kml.parse=g,r.exports.wkt=function(r,e,n){var o=n||L.geoJson();return t(r,function(r,n){if(r)return o.fire("error",{error:r});v(n.responseText,e,o),o.fire("ready")}),o},r.exports.wkt.parse=v}]);
//# sourceMappingURL=lfx-omnivore-prod.js.map