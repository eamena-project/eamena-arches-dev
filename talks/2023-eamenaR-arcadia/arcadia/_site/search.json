[
  {
    "objectID": "index.html#purpose",
    "href": "index.html#purpose",
    "title": "",
    "section": "Purpose",
    "text": "Purpose\n\n\n\n\nData analysis and audit of the EAMENA DB content\nData management between EAMENA DB and 3rd party apps\n\n\n\n\n\nflowchart LR\n    subgraph ide1 [Arches];\n    A[(EAMENA<br>DB)];\n    end;\n    A <--data<br>exchange--> B{{eamenaR}}:::eamenaRpkg;\n    B --data<br>analysis & management--> B;\n    B <--data<br>exchange--> C((3<sup>rd</sup> part<br>app));\n    B -- output--> D[maps<br>charts<br>listings<br>...];\n    classDef eamenaRpkg fill:#e3c071;"
  },
  {
    "objectID": "index.html#it-stack",
    "href": "index.html#it-stack",
    "title": "",
    "section": "IT Stack",
    "text": "IT Stack\n is an R package hosted on GitHub:\n\n is a scripting language for data science is the 1Ô∏è‚É£st used by archaeologists, and the 18th worldwide\n GitHub is the üîù popular web-platform for source code management and software development (with over 128 million public repositories)"
  },
  {
    "objectID": "index.html#libraries",
    "href": "index.html#libraries",
    "title": "",
    "section": " libraries",
    "text": "libraries"
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "",
    "section": "Data",
    "text": "Data\n\nFilesPostgreSQL\n\n\nGeoJSON is the privileged format to work with spatial data\n\n\n\n\n\n\n\nSome functions allow to query directly the PostgreSQL\n  ...\n        having.uuid <- having.df[[\"uuid\"]][hav]\n        sqll <- stringr::str_interp(\"\n              SELECT resourceinstanceid\n              FROM tiles\n              WHERE resourceinstanceid::text LIKE '${cc}'\n              AND tiledata ->> '${bc.uuid}' = '${having.uuid}'\n                         \")\n        uuid.having <- RPostgres::dbGetQuery(db.con, sqll)\n  ..."
  },
  {
    "objectID": "index.html#portability",
    "href": "index.html#portability",
    "title": "",
    "section": "Portability",
    "text": "Portability\n(in theory)  can work with different  instances\n\nMapping tableref_ids()Example\n\n\nMost of the hard-coded parts are stored in ids.csv\n\n\n\n\n \n  \n    r.concept.name \n    db.concept.name \n    db.concept.uuid \n  \n \n\n  \n    hp.id \n    EAMENA ID \n    34cfe992-c2c0-11ea-9026-02e7594ce0a0 \n  \n  \n    Investigator.Role.Type \n    Investigator Role Type \n    d2e1ab96-cc05-11ea-a292-02e7594ce0a0 \n  \n  \n    Geometric.Place.Expression \n    Geometric Place Expression \n    5348cf67-c2c5-11ea-9026-02e7594ce0a0 \n  \n  \n    Cultural.Period \n    Cultural Period \n    3b5c9ac7-5615-3de6-9e2d-4cd7ef7460e4 \n  \n  \n    Cultural.Period.Type \n    Cultural Period Type \n    38cff73b-c77b-11ea-a292-02e7594ce0a0 \n  \n  \n    Cultural.Sub-Period \n    Cultural Sub-Period \n    16cb160e-7b31-4872-b2ca-6305ad311011 \n  \n  \n    Disturbance.Extent.Type \n    Disturbance Extent Type \n    41488800-6c00-30f2-b93f-785e38ab6251 \n  \n  \n    cc.id \n    COMPONENT ID \n    c86fdfe8-cb7e-11ea-a292-02e7594ce0a0 \n  \n  \n    bc.id \n    Built Component Observation \n    8fc30f35-cb7e-11ea-a292-02e7594ce0a0 \n  \n  \n    Component.Type \n    Component Type \n    0b31e7ac-774b-442b-8aa8-b22e0dd2711e \n  \n  \n    Structural.Component \n    Structural Component \n    209ca140-9853-4000-8fb9-8c50844f6b0d \n  \n  \n    Measurement.Number \n    Measurement Number \n    5b3489c0-cb8f-11ea-a292-02e7594ce0a0 \n  \n  \n    Stable \n    Stable \n    17fe354b-7df5-4f21-b21f-182612e73c8d \n  \n  \n    Room \n    Room \n    642e89b5-70cb-46e1-851d-7930858b7f65 \n  \n\n\n\n\n\n\n\n\n\nCorrespondences between:\n\nArches UUID (e.g.¬†‚Äú34cfe992-c2c0-11ea-9026-02e7594ce0a0‚Äù);\n\nArches labels (e.g.¬†‚ÄúEAMENA ID‚Äù);\n\nR short names (e.g.¬†‚Äúhp.id‚Äù);\n\n\n\neamenaR::ref_ids(concept.name = \"34cfe992-c2c0-11ea-9026-02e7594ce0a0\", choice = \"db.concept.name\")\n\n\n[1] \"EAMENA ID\"\n\n\n\n\neamenaR::ref_ids(concept.name = \"EAMENA ID\", choice = \"r.concept.name\")\n\n\n[1] \"hp.id\"\n\n\n\n\neamenaR::ref_ids(concept.name = \"hp.id\", choice = \"db.concept.uuid\")\n\n\n[1] \"34cfe992-c2c0-11ea-9026-02e7594ce0a0\""
  },
  {
    "objectID": "index.html#install-and-documentation",
    "href": "index.html#install-and-documentation",
    "title": "",
    "section": "Install and documentation",
    "text": "Install and documentation\nInstall and to load\ndevtools::install_github(\"eamena-project/eamenaR\")\nlibrary(eamenaR)\nDocumentation\n?geojson_map"
  },
  {
    "objectID": "index.html#generalities",
    "href": "index.html#generalities",
    "title": "",
    "section": "Generalities",
    "text": "Generalities\nOutputs are ‚Äòflat‚Äô or interactive based on the option interactive\ngeojson_boxplot(stat = \"area\", by = \"route\", interactive = T, verbose = F)"
  },
  {
    "objectID": "index.html#maps",
    "href": "index.html#maps",
    "title": "",
    "section": "Maps",
    "text": "Maps\nMaps of heritage places\n\nGeneralThematicPathsList of IDsList of fields\n\n\ngeojson_map(map.name = \"caravanserail\", geojson.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserail.geojson\"))\n\n\n\n\n\ngeojson_map(map.name = \"caravanserail\", field.names = c(\"Damage Extent Type\"), geojson.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserail.geojson\"))\n\n\n\n\n\n\n\n\n\n\n\nMaps for paths between heritage places\ngeojson_map_path(geojson.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserailZ.geojson\"),                  csv.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserail_paths.csv\"))\n\n\n\n\n\ngeojson_stat(stat = \"list_ids\")\n\n\n[1] \"Ids list: \\n\"\n1: EAMENA-0182033, 2: EAMENA-0182057, 3: EAMENA-0207223, 4: EAMENA-0216145, 5: EAMENA-0216146, 6: EAMENA-0216147, 7: EAMENA-0216149, 8: EAMENA-0182054, 9: EAMENA-0164904, 10: EAMENA-0164905, 11: EAMENA-0164906, 12: EAMENA-0182056, 13: EAMENA-0182056, 14: EAMENA-0182058, 15: EAMENA-0182058, 16: EAMENA-0164943, 17: EAMENA-0164943, 18: EAMENA-0207124, 19: EAMENA-0207124, 20: EAMENA-0207205, 21: EAMENA-0207205, 22: EAMENA-0207206, 23: EAMENA-0207206, 24: EAMENA-0207208, 25: EAMENA-0207208, 26: EAMENA-0207207, 27: EAMENA-0207207, 28: EAMENA-0207204, 29: EAMENA-0207204, 30: EAMENA-0207203, 31: EAMENA-0207203, 32: EAMENA-0207210, 33: EAMENA-0207210, 34: EAMENA-0207215, 35: EAMENA-0207215, 36: EAMENA-0207214, 37: EAMENA-0207214, 38: EAMENA-0207216, 39: EAMENA-0207216, 40: EAMENA-0207217, 41: EAMENA-0207217, 42: EAMENA-0207212, 43: EAMENA-0207212, 44: EAMENA-0207211, 45: EAMENA-0207211, 46: EAMENA-0207218, 47: EAMENA-0207218, 48: EAMENA-0207209, 49: EAMENA-0207209, 50: EAMENA-0207209, 51: EAMENA-0207219, 52: EAMENA-0207219, 53: EAMENA-0207224, 54: EAMENA-0207224, 55: EAMENA-0207261, 56: EAMENA-0207261, 57: EAMENA-0207259, 58: EAMENA-0207259, 59: EAMENA-0207262, 60: EAMENA-0207262, 61: EAMENA-0207263, 62: EAMENA-0207263, 63: EAMENA-0207260, 64: EAMENA-0207260, 65: EAMENA-0207222, 66: EAMENA-0207222, 67: EAMENA-0207232, 68: EAMENA-0207232, 69: EAMENA-0182055, 70: EAMENA-0182055, 71: EAMENA-0207233, 72: EAMENA-0207233, 73: EAMENA-0207236, 74: EAMENA-0207236, 75: EAMENA-0207239, 76: EAMENA-0207239, 77: EAMENA-0207240, 78: EAMENA-0207240, 79: EAMENA-0207234, 80: EAMENA-0207234, 81: EAMENA-0207235, 82: EAMENA-0207235, 83: EAMENA-0207243, 84: EAMENA-0207243, 85: EAMENA-0207245, 86: EAMENA-0207245, 87: EAMENA-0207241, 88: EAMENA-0207241, 89: EAMENA-0207244, 90: EAMENA-0207244, 91: EAMENA-0207238, 92: EAMENA-0207238, 93: EAMENA-0207231, 94: EAMENA-0207231, 95: EAMENA-0207250, 96: EAMENA-0207250, 97: EAMENA-0207249, 98: EAMENA-0207249, 99: EAMENA-0207251, 100: EAMENA-0207251, 101: EAMENA-0207213, 102: EAMENA-0207213, 103: EAMENA-0207237, 104: EAMENA-0207237, 105: EAMENA-0207246, 106: EAMENA-0207246, 107: EAMENA-0207242, 108: EAMENA-0207242, 109: EAMENA-0207247, 110: EAMENA-0207247, 111: EAMENA-0207255, 112: EAMENA-0207255, 113: EAMENA-0207257, 114: EAMENA-0207257, 115: EAMENA-0207248, 116: EAMENA-0207248, 117: EAMENA-0207253, 118: EAMENA-0207253, 119: EAMENA-0207252, 120: EAMENA-0207252, 121: EAMENA-0207258, 122: EAMENA-0207258, 123: EAMENA-0207480, 124: EAMENA-0207480, 125: EAMENA-0207481, 126: EAMENA-0207481, 127: EAMENA-0207485, 128: EAMENA-0207485, 129: EAMENA-0207482, 130: EAMENA-0207482, 131: EAMENA-0207483, 132: EAMENA-0207483, 133: EAMENA-0207486, 134: EAMENA-0207486, 135: EAMENA-0207484, 136: EAMENA-0207484, 137: EAMENA-0207493, 138: EAMENA-0207493, 139: EAMENA-0207499, 140: EAMENA-0207499, 141: EAMENA-0207500, 142: EAMENA-0207500, 143: EAMENA-0207503, 144: EAMENA-0207503, 145: EAMENA-0207504, 146: EAMENA-0207504, 147: EAMENA-0207502, 148: EAMENA-0207502, 149: EAMENA-0207497, 150: EAMENA-0207497, 151: EAMENA-0207498, 152: EAMENA-0207498, 153: EAMENA-0207501, 154: EAMENA-0207501, 155: EAMENA-0207505, 156: EAMENA-0207505, 157: EAMENA-0207490, 158: EAMENA-0207490, 159: EAMENA-0207491, 160: EAMENA-0207491, 161: EAMENA-0207488, 162: EAMENA-0207488, 163: EAMENA-0207496, 164: EAMENA-0207496, 165: EAMENA-0207492, 166: EAMENA-0207492, 167: EAMENA-0207489, 168: EAMENA-0207489, 169: EAMENA-0207487, 170: EAMENA-0207487, 171: EAMENA-0207495, 172: EAMENA-0207495, 173: EAMENA-0207506, 174: EAMENA-0207506, 175: EAMENA-0192281, 176: EAMENA-0192281, 177: EAMENA-0192612, 178: EAMENA-0192628, 179: EAMENA-0192636, 180: EAMENA-0192665, 181: EAMENA-0192682, 182: EAMENA-0192685, 183: EAMENA-0207254, 184: EAMENA-0207221, 185: EAMENA-0192639, 186: EAMENA-0192639, 187: EAMENA-0192640, 188: EAMENA-0192640, 189: EAMENA-0192641, 190: EAMENA-0192641, 191: EAMENA-0192642, 192: EAMENA-0192642, 193: EAMENA-0192646, 194: EAMENA-0192646, 195: EAMENA-0192647, 196: EAMENA-0192647, 197: EAMENA-0192648, 198: EAMENA-0192648, 199: EAMENA-0192649, 200: EAMENA-0192649, 201: EAMENA-0192650, 202: EAMENA-0192650, 203: EAMENA-0192651, 204: EAMENA-0192651, 205: EAMENA-0192632, 206: EAMENA-0192632, 207: EAMENA-0192633, 208: EAMENA-0192633, 209: EAMENA-0192634, 210: EAMENA-0192634, 211: EAMENA-0192635, 212: EAMENA-0192635, 213: EAMENA-0192637, 214: EAMENA-0192637, 215: EAMENA-0192638, 216: EAMENA-0192638, 217: EAMENA-0192643, 218: EAMENA-0192643, 219: EAMENA-0192644, 220: EAMENA-0192644, 221: EAMENA-0192645, 222: EAMENA-0192645, 223: EAMENA-0194777, 224: EAMENA-0194777, 225: EAMENA-0194778, 226: EAMENA-0194778, 227: EAMENA-0194693, 228: EAMENA-0194693, 229: EAMENA-0194694, 230: EAMENA-0194694, 231: EAMENA-0194704, 232: EAMENA-0194704, 233: EAMENA-0194706, 234: EAMENA-0194706, 235: EAMENA-0194707, 236: EAMENA-0194707, 237: EAMENA-0194717, 238: EAMENA-0194717, 239: EAMENA-0192700, 240: EAMENA-0192700, 241: EAMENA-0207220, 242: EAMENA-0207220, 243: EAMENA-0194695, 244: EAMENA-0194695, 245: EAMENA-0194697, 246: EAMENA-0194697, 247: EAMENA-0194703, 248: EAMENA-0194703, 249: EAMENA-0207256, 250: EAMENA-0207256, 251: EAMENA-0192223, 252: EAMENA-0192223, 253: EAMENA-0217110, 254: EAMENA-0217110, 255: EAMENA-0192687, 256: EAMENA-0192687, 257: EAMENA-0192688, 258: EAMENA-0192688, 259: EAMENA-0192689, 260: EAMENA-0192689, 261: EAMENA-0192690, 262: EAMENA-0192690, 263: EAMENA-0192697, 264: EAMENA-0192697, 265: EAMENA-0192698, 266: EAMENA-0192698, 267: EAMENA-0194755, 268: EAMENA-0194755, 269: EAMENA-0194757, 270: EAMENA-0194757, 271: EAMENA-0194758, 272: EAMENA-0194758, 273: EAMENA-0194759, 274: EAMENA-0194759, 275: EAMENA-0194760, 276: EAMENA-0194760, 277: EAMENA-0194764, 278: EAMENA-0194764, 279: EAMENA-0194767, 280: EAMENA-0194767, 281: EAMENA-0194768, 282: EAMENA-0194768, 283: EAMENA-0194773, 284: EAMENA-0194773, 285: EAMENA-0194774, 286: EAMENA-0194774, 287: EAMENA-0194775, 288: EAMENA-0194775, 289: EAMENA-0192683, 290: EAMENA-0192683, 291: EAMENA-0192684, 292: EAMENA-0192684, 293: EAMENA-0192686, 294: EAMENA-0192686, 295: EAMENA-0192691, 296: EAMENA-0192691, 297: EAMENA-0192692, 298: EAMENA-0192692, 299: EAMENA-0192693, 300: EAMENA-0192693, 301: EAMENA-0192695, 302: EAMENA-0192695, 303: EAMENA-0192696, 304: EAMENA-0192696, 305: EAMENA-0194770, 306: EAMENA-0194770, 307: EAMENA-0194772, 308: EAMENA-0194772, 309: EAMENA-0192598, 310: EAMENA-0192598, 311: EAMENA-0192599, 312: EAMENA-0192599, 313: EAMENA-0192600, 314: EAMENA-0192600, 315: EAMENA-0192601, 316: EAMENA-0192601, 317: EAMENA-0192602, 318: EAMENA-0192602, 319: EAMENA-0192603, 320: EAMENA-0192603, 321: EAMENA-0192604, 322: EAMENA-0192604, 323: EAMENA-0192605, 324: EAMENA-0192605, 325: EAMENA-0192606, 326: EAMENA-0192606, 327: EAMENA-0192608, 328: EAMENA-0192608, 329: EAMENA-0192609, 330: EAMENA-0192609, 331: EAMENA-0192610, 332: EAMENA-0192610, 333: EAMENA-0192611, 334: EAMENA-0192611, 335: EAMENA-0192613, 336: EAMENA-0192613, 337: EAMENA-0192614, 338: EAMENA-0192614, 339: EAMENA-0192615, 340: EAMENA-0192615, 341: EAMENA-0192616, 342: EAMENA-0192616, 343: EAMENA-0192617, 344: EAMENA-0192617, 345: EAMENA-0192618, 346: EAMENA-0192618, 347: EAMENA-0192619, 348: EAMENA-0192619, 349: EAMENA-0192620, 350: EAMENA-0192620, 351: EAMENA-0192621, 352: EAMENA-0192621, 353: EAMENA-0192622, 354: EAMENA-0192622, 355: EAMENA-0192623, 356: EAMENA-0192623, 357: EAMENA-0192624, 358: EAMENA-0192624, 359: EAMENA-0192625, 360: EAMENA-0192625, 361: EAMENA-0192626, 362: EAMENA-0192626, 363: EAMENA-0192627, 364: EAMENA-0192627, 365: EAMENA-0192629, 366: EAMENA-0192629, 367: EAMENA-0192630, 368: EAMENA-0192630, 369: EAMENA-0192671, 370: EAMENA-0192671, 371: EAMENA-0192672, 372: EAMENA-0192672, 373: EAMENA-0192673, 374: EAMENA-0192673, 375: EAMENA-0192674, 376: EAMENA-0192674, 377: EAMENA-0192652, 378: EAMENA-0192652, 379: EAMENA-0192653, 380: EAMENA-0192653, 381: EAMENA-0192654, 382: EAMENA-0192654, 383: EAMENA-0192678, 384: EAMENA-0192678, 385: EAMENA-0192679, 386: EAMENA-0192679, 387: EAMENA-0192680, 388: EAMENA-0192680, 389: EAMENA-0192681, 390: EAMENA-0192681, 391: EAMENA-0192664, 392: EAMENA-0192664, 393: EAMENA-0192666, 394: EAMENA-0192666, 395: EAMENA-0192667, 396: EAMENA-0192667, 397: EAMENA-0192655, 398: EAMENA-0192655, 399: EAMENA-0192656, 400: EAMENA-0192656, 401: EAMENA-0192657, 402: EAMENA-0192657, 403: EAMENA-0192658, 404: EAMENA-0192658, 405: EAMENA-0192659, 406: EAMENA-0192659, 407: EAMENA-0192660, 408: EAMENA-0192660, 409: EAMENA-0192675, 410: EAMENA-0192675, 411: EAMENA-0192676, 412: EAMENA-0192676, 413: EAMENA-0192677, 414: EAMENA-0192677, 415: EAMENA-0192668, 416: EAMENA-0192668, 417: EAMENA-0192669, 418: EAMENA-0192669, 419: EAMENA-0192670, 420: EAMENA-0192670, 421: EAMENA-0192661, 422: EAMENA-0192661, 423: EAMENA-0192663, 424: EAMENA-0192663\n\n\n\n\n\n\n\ngeojson_stat(stat = \"list_fields\")\n\n\n[1] \"Field list: \\n\"\nPriority Type\nOverall Archaeological Certainty Value\nMinimum Depth/Max Elevation\nMeasurement Unit\nResource Name\nMeasurement Number\nName Type\nSurficial Geology Type\nLocation Certainty\nLand Cover Assessment Date\nDatum Type\nInvestigator Role Type\nInformation Resource Acquisition Date\nSpatial Coordinates Ref System\nMeasurement Source Type\nInformation Resource\nImagery Acquisition Date\nHeritage Place Resource Instance\nHeritage Place Function Certainty\nGeometry Qualifier\nOverall Site Shape Type\nAssessment Activity Date\nThreat Cause Type\nGoogle Earth Assessment\nGeneral Description\nOverall Condition State Type\nAdministrative Division Type\nFetch Type\nRelated Geoarchaeology/Palaeolandscape\nHeritage Place Type\nBuilt Component\nGeneral Description Type\nEAMENA ID\nHeritage Place Function\nEffect Certainty\nMaterial Class\nDisturbance Date To\nDisturbance Date Occurred Before\nAddress Type\nDisturbance Date From\nMaterial Type\nBedrock Geology Type\nAssessment Investigator - Actor\nMaximum Depth/Min Elevation\nAssessment Activity Type\nCountry Type\nCultural Period Type\nArchaeological From Date\nCultural Sub-period Type\nSite Feature Form Type\nAH Date To\nEffect Type\nDisturbance Date Occurred On\nGeometry Extent Certainty\nCadastral Reference\nDesignation From Date\nAdministrative Division\nSite Feature Shape Type\nBP Date To\nDepositional Process\nDetailed Condition Assessments\nRecommendation Type\nCultural Period Certainty\nAddress\nLand Cover Type\nConstruction Technique\nArchaeological To Date\nDisturbance Cause Type\nResource Orientation\nSH Date to\nGE Imagery Acquisition Date\nDamage Extent Type\nCultural Sub-period Certainty\nDate Inference Making Actor Name\nOverall Site Morphology Type\nGrid ID\nDatum Description/EPSG code\nDesignation\nDisturbance Cause Certainty\nDesignation To Date\nIntervention Activity Type\nDimension Type\nBP Date From\nAH Date From\nDisturbance Cause Assignment Assessor Name - Actor\nDisturbance Cause Category Type\nRestricted Access Record Designation\nSH Date From\nSite Feature Arrangement Type\nSite Feature Form Type Certainty\nSite Feature Interpretation Certainty\nSite Feature Interpretation Number Type\nSite Feature Interpretation Type\nSite Feature Number Type\nThreat Category\nThreat Inference Making Assessor Name - Actor\nresourceid\nThreat Probability\nTidal Range\nTopography Type\nWave Climate"
  },
  {
    "objectID": "index.html#elevations",
    "href": "index.html#elevations",
    "title": "",
    "section": "Elevations",
    "text": "Elevations\n\nAPI elevation dataProfiles\n\n\nUse API data, on the fly, to retrieve elevations\ngeojson_addZ(elevation.api = \"gmrt_point\", geojson.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserail.geojson\"))\n\n\n\n\n\nElevation profiles :\ngeojson_map_path(export.type = \"profile\", geojson.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserail.geojson\"), csv.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserail_paths.csv\"))"
  },
  {
    "objectID": "index.html#statistics",
    "href": "index.html#statistics",
    "title": "",
    "section": "Statistics",
    "text": "Statistics\n\nAreasConditionsDisturbancesPeriodsOrientations\n\n\ngeojson_boxplot(stat = \"area\", by = \"route\")\n\n\n\n\n\ngeojson_stat(stat = \"stats\", field.names = c(\"Overall Condition State Type\"))\n\n\n\n\n\ngeojson_stat(stat = \"stats\", chart.type = \"hist\",\n             field.names = c(\"Disturbance Cause Category Type\"))\n\n\n\n\n\nd <- list_cultural_periods(db = \"geojson\", d = d)\nplot_cultural_periods(d = d, field = \"subperiods\", plot.type = \"by.eamenaid\")\n\n\n\n\n\ngeojson_stat(stat = \"stats\", chart.type = \"radar\", \n             field.names = c(\"Resource Orientation\"))"
  },
  {
    "objectID": "index.html#connected-components",
    "href": "index.html#connected-components",
    "title": "",
    "section": "Connected components",
    "text": "Connected components\nHeritage places (EAMENA-) connected to different built components (COMPONENT-)\n\n\n\n\n\nThe caravanserai Maranjab (EAMENA-164943)\n\n\n\n\n\n\nGround plan of EAMENA-164943\n\n\n\n\n\n\nCOMPONENT-* record the courtyard, 28 rooms and 30 stables of EAMENA-164943."
  },
  {
    "objectID": "index.html#connected-components-1",
    "href": "index.html#connected-components-1",
    "title": "",
    "section": "Connected components",
    "text": "Connected components\nList the connected components\nd <- hash::hash()\nmy_con <- RPostgres::dbConnect(drv = RPostgres::Postgres(),\n                               user = 'xxx',\n                               password = 'xxx',\n                               dbname = 'eamena',\n                               host = 'ec2-54-155-109-226.eu-west-1.compute.amazonaws.com',\n                               port = 5432)\ndf <- list_related_resources(db.con = my_con,\n                             d = d,\n                             relationshiptype = \"PX_is_related_to\",\n                             id = \"EAMENA-0164943\",\n                             disconn = FALSE)"
  },
  {
    "objectID": "index.html#connected-components-2",
    "href": "index.html#connected-components-2",
    "title": "",
    "section": "Connected components",
    "text": "Connected components\nSelect some of these connected components\ndf.measures.all <- data.frame(hp.id = character(), hp.uuid = character(),\n                              cc.id = character(), cc.uuid = character(), cc.type = character(), cc.measure = numeric())\nfor(have in c(\"Room\", \"Stable\")){\n  df.measures <- select_related_resources(db.con = my_con,\n                                          df = df,\n                                          having = have,\n                                          disconn = F)\n  df.measures.all <- rbind(df.measures.all, df.measures)\n}\ndf.measures.all[ , c(\"hp.id\", \"cc.id\", \"cc.type\", \"cc.measure\")]\n\n\n[1] \"found id\"\n\n\n\n\n \n  \n    hp.id \n    cc.id \n    cc.type \n    cc.measure \n  \n \n\n  \n    EAMENA-0164943 \n    COMPONENT-0000144 \n    Room \n    28 \n  \n  \n    EAMENA-0164943 \n    COMPONENT-0000141 \n    Stable \n    30"
  },
  {
    "objectID": "index.html#interactivity",
    "href": "index.html#interactivity",
    "title": "",
    "section": "Interactivity",
    "text": "Interactivity\n\n paths time\n\n\ngeojson_map(interactive = T, geojson.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserail.geojson\"))\n\n\n\ngeojson_map_path(interactive = T, selected.category = c(2), geojson.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserailZ.geojson\"), csv.path = paste0(system.file(package = \"eamenaR\"), \"/extdata/caravanserail_paths.csv\"))\n\n\n\nplot_edtf(edtf_span = \"ym\", edtf_analyse = \"category\")"
  },
  {
    "objectID": "index.html#bulk-upload",
    "href": "index.html#bulk-upload",
    "title": "",
    "section": "Bulk Upload",
    "text": "Bulk Upload\n\n\n\n\ntarget: field names of an  instance\nsource: data coming from different authors (here ‚Äòmk‚Äô = Mohamed Kenawi).\n\n\n\n\n\n\nkey\n\n\ndescription\n\n\n\n\n\n\nvalue\n\n\nrepeat the same value in the targeted column\n\n\n\n\nfield\n\n\nrecopy all values in the targeted column\n\n\n\n\nexpression\n\n\ncalculate values based on an R code snippet\n\n\n\n\nescape\n\n\nvalues are calculated in another field\n\n\n\n\n\n\ntype of action to perform on source field names values"
  },
  {
    "objectID": "index.html#rd-party-applications",
    "href": "index.html#rd-party-applications",
    "title": "",
    "section": "3rd party applications",
    "text": "3rd party applications\nAppend geometries from Google Earth and GIS"
  },
  {
    "objectID": "index.html#duplicates",
    "href": "index.html#duplicates",
    "title": "",
    "section": "Duplicates",
    "text": "Duplicates\nd <- hash::hash()\nd <- ref_are_duplicates(d = d,\n                        hp.list = c(\"EAMENA-0207209\", \"EAMENA-0182057\"),\n                        selected.fields = c(\"Assessment Investigator - Actor\",\n                                            \"Assessment Activity Date\",\n                                            \"Resource Name\",\n                                            \"geometry\"))\nd$are_duplicates\n\n\n\n\n \n  \n    field \n    fb0a2ef4-023f-4d13-b931-132799bb7a6c \n    563567f7-eef0-4683-9e88-5e4be2452f80 \n    dist \n  \n \n\n  \n    EAMENA ID \n    EAMENA-0182057 \n    EAMENA-0207209 \n    - \n  \n  \n    Assessment Investigator - Actor \n    Hamed Rahnama \n    Hamed Rahnama, Bijan Rouhani \n    0.18 \n  \n  \n    Assessment Activity Date \n    2021-05-25 \n    2022-08-21, 2022-08-30 \n    0.32 \n  \n  \n    Resource Name \n    Bedasht Caravanserai, <U+06A9><U+0627><U+0631><U+0648><U+0646><U+0633><U+0631><U+0627><U+06CC> <U+0628><U+062F><U+0634><U+062A>, CVNS-IR \n    CVNS-IR, Bedasht Caravanserai, <U+06A9><U+0627><U+0631><U+0648><U+0627><U+0646><U+0633><U+0631><U+0627><U+06CC> <U+0628><U+062F><U+0634><U+062A> \n    0.26 \n  \n  \n    geometry \n    c(55.05059, 36.42466) \n    c(55.05059, 36.42466) \n    0"
  },
  {
    "objectID": "index.html#users",
    "href": "index.html#users",
    "title": "",
    "section": "Users",
    "text": "Users\nTotal number of new users registered in EAMENA for the year 2022\nref_users(db.con = my_con, d = d, date.after = \"2022-01-01\", date.before = \"2022-12-01\",\n          plot.g = T)"
  },
  {
    "objectID": "index.html#fair-data",
    "href": "index.html#fair-data",
    "title": "",
    "section": "FAIR data",
    "text": "FAIR data\nImproves the FAIRness (Findable, Accessible, Interoperable, Reusable) of data"
  },
  {
    "objectID": "index.html#next-steps",
    "href": "index.html#next-steps",
    "title": "",
    "section": "Next steps",
    "text": "Next steps\n\nNeed for better standardisation of functions and documentation.\n Open to contributions."
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "",
    "section": "Contact",
    "text": "Contact\n\n https://github.com/eamena-project/eamenaR\n https://eamena.org/\n\n\n\n\neamenaR  - Arcadia meeting, London (UK), 10th March 2023"
  }
]